<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.hqyj.dao.system.PermissionsMapper">
	<resultMap id="BaseResultMap" type="com.hqyj.model.system.Permissions">
		<id column="permissions_id" property="permissionsId" jdbcType="INTEGER" />
		<result column="p_id" property="pId" jdbcType="INTEGER" />
		<result column="permissions_name" property="permissionsName"
			jdbcType="VARCHAR" />
		<result column="permissions_desc" property="permissionsDesc"
			jdbcType="VARCHAR" />
		<result column="permissions_url" property="permissionsUrl"
			jdbcType="VARCHAR" />
		<result column="percode" property="percode" jdbcType="VARCHAR" />
		<result column="type" property="type" jdbcType="VARCHAR" />
		<result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
	</resultMap>
	<sql id="Base_Column_List">
		permissions_id, p_id, permissions_name, permissions_desc,
		permissions_url, percode,
		type, create_time
	</sql>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		from sys_permissions
		where permissions_id =
		#{permissionsId,jdbcType=INTEGER}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from
		sys_permissions
		where permissions_id =
		#{permissionsId,jdbcType=INTEGER}
	</delete>
	<insert id="insert" parameterType="com.hqyj.model.system.Permissions">
		insert into sys_permissions
		(permissions_id, p_id, permissions_name,
		permissions_desc,
		permissions_url, percode,
		type, create_time)
		values
		(#{permissionsId,jdbcType=INTEGER}, #{pId,jdbcType=INTEGER},
		#{permissionsName,jdbcType=VARCHAR},
		#{permissionsDesc,jdbcType=VARCHAR},
		#{permissionsUrl,jdbcType=VARCHAR}, #{percode,jdbcType=VARCHAR},
		#{type,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP})
	</insert>
	<insert id="insertSelective" parameterType="com.hqyj.model.system.Permissions">
		insert into sys_permissions
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="permissionsId != null">
				permissions_id,
			</if>
			<if test="pId != null">
				p_id,
			</if>
			<if test="permissionsName != null">
				permissions_name,
			</if>
			<if test="permissionsDesc != null">
				permissions_desc,
			</if>
			<if test="permissionsUrl != null">
				permissions_url,
			</if>
			<if test="percode != null">
				percode,
			</if>
			<if test="type != null">
				type,
			</if>
			<if test="createTime != null">
				create_time,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="permissionsId != null">
				#{permissionsId,jdbcType=INTEGER},
			</if>
			<if test="pId != null">
				#{pId,jdbcType=INTEGER},
			</if>
			<if test="permissionsName != null">
				#{permissionsName,jdbcType=VARCHAR},
			</if>
			<if test="permissionsDesc != null">
				#{permissionsDesc,jdbcType=VARCHAR},
			</if>
			<if test="permissionsUrl != null">
				#{permissionsUrl,jdbcType=VARCHAR},
			</if>
			<if test="percode != null">
				#{percode,jdbcType=VARCHAR},
			</if>
			<if test="type != null">
				#{type,jdbcType=VARCHAR},
			</if>
			<if test="createTime != null">
				#{createTime,jdbcType=TIMESTAMP},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="com.hqyj.model.system.Permissions">
		update sys_permissions
		<set>
			<if test="pId != null">
				p_id = #{pId,jdbcType=INTEGER},
			</if>
			<if test="permissionsName != null">
				permissions_name = #{permissionsName,jdbcType=VARCHAR},
			</if>
			<if test="permissionsDesc != null">
				permissions_desc = #{permissionsDesc,jdbcType=VARCHAR},
			</if>
			<if test="permissionsUrl != null">
				permissions_url = #{permissionsUrl,jdbcType=VARCHAR},
			</if>
			<if test="percode != null">
				percode = #{percode,jdbcType=VARCHAR},
			</if>
			<if test="type != null">
				type = #{type,jdbcType=VARCHAR},
			</if>
			<if test="createTime != null">
				create_time = #{createTime,jdbcType=TIMESTAMP},
			</if>
		</set>
		where permissions_id = #{permissionsId,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.hqyj.model.system.Permissions">
		update
		sys_permissions
		set p_id = #{pId,jdbcType=INTEGER},
		permissions_name =
		#{permissionsName,jdbcType=VARCHAR},
		permissions_desc =
		#{permissionsDesc,jdbcType=VARCHAR},
		permissions_url =
		#{permissionsUrl,jdbcType=VARCHAR},
		percode =
		#{percode,jdbcType=VARCHAR},
		type = #{type,jdbcType=VARCHAR},
		create_time = #{createTime,jdbcType=TIMESTAMP}
		where permissions_id =
		#{permissionsId,jdbcType=INTEGER}
	</update>


	<select id="queryAllPermissions" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from sys_permissions
	</select>


	<select id="queryPermissions_db_xzByRoleId" resultMap="BaseResultMap"
		parameterType="java.lang.Integer">
		SELECT
		sys_permissions.permissions_id,
		sys_permissions.p_id,
		sys_permissions.permissions_name,
		sys_permissions.permissions_desc,
		sys_permissions.permissions_url,
		sys_permissions.percode,
		sys_permissions.type,
		sys_permissions.create_time
		FROM
		sys_role_permissions
		INNER JOIN
		sys_permissions ON sys_role_permissions.permissions_id =
		sys_permissions.permissions_id
		where role_id =
		#{roleId,jdbcType=INTEGER}
	</select>

	<select id="queryPermissions_db_xzByUserIdAndType" resultMap="BaseResultMap"
		parameterType="java.lang.Integer">
		SELECT
		sys_permissions.permissions_id,
		sys_permissions.p_id,
		sys_permissions.permissions_name,
		sys_permissions.permissions_desc,
		sys_permissions.permissions_url,
		sys_permissions.percode,
		sys_permissions.type,
		sys_permissions.create_time
		FROM
		sys_user_role
		INNER JOIN sys_role ON
		sys_user_role.role_id = sys_role.role_id
		INNER JOIN
		sys_role_permissions ON sys_role.role_id =
		sys_role_permissions.role_id
		INNER JOIN sys_permissions ON
		sys_role_permissions.permissions_id =
		sys_permissions.permissions_id
		where user_id = #{userId,jdbcType=INTEGER} and type ='menu'
	</select>


	<select id="queryPermissions_db_xzByPid" resultMap="BaseResultMap"
		parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		from sys_permissions
		where p_id = #{pId,jdbcType=INTEGER}
	</select>


	<select id="queryPermissionsByUserId" resultMap="BaseResultMap"
		parameterType="java.lang.Integer">
		SELECT
		sys_permissions.permissions_id,
		sys_permissions.p_id,
		sys_permissions.permissions_name,
		sys_permissions.permissions_desc,
		sys_permissions.permissions_url,
		sys_permissions.percode,
		sys_permissions.type,
		sys_permissions.create_time
		FROM
		sys_user_role
		INNER JOIN sys_role ON sys_user_role.role_id = sys_role.role_id
		INNER JOIN sys_role_permissions ON sys_role.role_id =
		sys_role_permissions.role_id
		INNER JOIN sys_permissions ON sys_role_permissions.permissions_id =
		sys_permissions.permissions_id
		WHERE user_id='8'
		where user_id = #{userId,jdbcType=INTEGER}
	</select>
</mapper>