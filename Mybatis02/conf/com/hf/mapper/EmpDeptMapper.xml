<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
 PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
 "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
 
 <mapper namespace="com.hf.mapper.EmpDeptMapper">
 	
 	<!--  多对一的第一种方式
 	<resultMap type="com.hf.bean.Emp" id="empMap">
 		<id column="eid" property="eid"/>
 		<result column="ename" property="ename"/>
 		<result column="age" property="age"/>
 		<result column="sex" property="sex"/>
 		<result column="did" property="dept.did"/>
 		<result column="dname" property="dept.dname"/>
 	</resultMap> -->
 	<!--  <resultMap>:自定义映射，处理复杂的表关系 
 			<id column="eid" property="eid"/>
 			<id>设置主键的映射关系，column:设置主段名  property:设置属性值
 			<result column="sex" property="sex"/>
 			<result>设置非主键的映射关系    column：设置主段名  property：设置属性值
 	  -->
 	  
 	<!--  多对一的第二种的方式 -->
 	<resultMap type="com.hf.bean.Emp" id="empMap">
 		<id column="eid" property="eid"/>
 		<result column="ename" property="ename"/>
 		<result column="age" property="age"/>
 		<result column="sex" property="sex"/>
 		<association property="dept" javaType="Dept">
 			<result column="did" property="did"/>
 			<result column="dname" property="dname"/>
 		</association>
 	</resultMap>
 	<!--  List<Emp> getAllEmp(); -->
 	<select id="getAllEmp" resultMap="empMap">
 		SELECT e.eid,e.ename,e.age,e.sex,e.did,d.dname from emp  e LEFT JOIN dept  d on e.did=d.did ;
 	</select>
 	
 	
 	<!-- 分步查询 -->
 	<resultMap type="com.hf.bean.Emp" id="empStepMap">
 		<id column="eid" property="eid"/>
 		<result column="ename" property="ename"/>
 		<result column="age" property="age"/>
 		<result column="sex" property="sex"/>
 		<!--  
 			select：分步查询的SQL的id，即接口的权限定名，方法名或namespace.SQL的id
 			column：分步查询的条件，注意：此条件必须是从数据库查询过的
 		 -->
 		<!--  分步查询 -->
 		<association property="dept" select="com.hf.mapper.DeptMapper.getDeptByDid" column="did" > 
 		
 		</association>
 	</resultMap>
 	
 	<!-- Emp getEmpStep(String eid);  -->
 	<select id="getEmpStep" resultMap="empStepMap">
 		select eid,ename,age ,sex ,did from emp where eid=#{eid}
 	</select>
 	
 	
 	<!--  -->
 	<resultMap type="com.hf.bean.Dept" id="deptMap">
 		<id column="did" property="did"/>
 		<result column="dname" property="dname"/>
 		<!--  oftype:指集合中的类型，不需要指定javaType
 			<collection>:处理一对多和多对多的关系
 		 -->
 		 <!--  一对多 -->
 		<collection property="emps" ofType="com.hf.bean.Emp">
 			<id column="eid" property="eid"/>
 			<result column="ename" property="ename"/>
 			<result column="age" property="age"/>
 			<result column="sex" property="sex"/>
 		</collection>
 	</resultMap>
 	<!-- Dept  getDeptEmpsByDid(String did); -->
 	<select id="getDeptEmpsByDid" resultMap="deptMap">
 		select d.did,d.dname,e.eid,e.ename,e.age,e.sex from dept d left join emp e on d.did=e.did where d.did=#{did}
 	</select>
 	
 	<resultMap type="com.hf.bean.Dept" id="deptMapStep">
 		<id column="did" property="did"/>
 		<result column="dname" property="dname"/>
 		<collection property="emps" select="com.hf.mapper.EmpDeptMapper.getEmpListByDid" column="did"
 			fetchType="eager">
 		<!-- <collection property="emps" 
 			select="com.hf.mapper.EmpDeptMapper.getEmpListByDid" column="{did=did}"> -->
 		</collection>
 	</resultMap>
 	
 	<!-- Dept getOnlyDeptByDid(String did); -->
 	<select id="getOnlyDeptByDid" resultMap="deptMapStep">
 		select did,dname from dept where did = #{did}
 	</select>
 	
 	<!-- List<Emp> getEmpListByDid(String did); -->
 	<select id="getEmpListByDid" resultType="com.hf.bean.Emp">
 		select eid ,ename , age ,sex from emp where did =#{did}
 	</select>
 
 </mapper>